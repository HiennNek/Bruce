/**
 * @file RFIDInterface.h
 * @author Rennan Cockles (https://github.com/rennancockles)
 * @brief Interface for RFID modules
 * @version 0.1
 * @date 2024-08-19
 */

#ifndef __RFID_INTERFACE_H__
#define __RFID_INTERFACE_H__

#include <globals.h>

class RFIDInterface {
public:
    typedef struct {
        byte size;
        byte uidByte[10];
        byte sak;
        byte atqaByte[2];
    } Uid;

    typedef struct {
        String uid;
        String bcc;
        String sak;
        String atqa;
        String picc_type;
    } PrintableUID;

    typedef struct {
        byte begin = 0x03;
        byte messageSize;
        byte header = 0xD1;
        byte tnf = 0x01;
        byte payloadSize;
        byte payloadType;
        byte payload[140];
        byte end = 0xFE;
    } NdefMessage;

    enum ReturnCode {
        SUCCESS = 0,
        FAILURE = 1,
        TAG_NOT_PRESENT = 2,
        TAG_NOT_MATCH = 3,
        TAG_AUTH_ERROR = 4,
        NOT_IMPLEMENTED = 5,
    };

    enum NDEF_Payload_Type { NDEF_TEXT = 0x54, NDEF_URI = 0x55 };

    uint8_t keys[49][6] = {
        {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
        {0xD3, 0xF7, 0xD3, 0xF7, 0xD3, 0xF7},
        {0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5},
        {0xA5, 0xA4, 0xA3, 0xA2, 0xA1, 0xA0},
        {0x89, 0xEC, 0xA9, 0x7F, 0x8C, 0x2A},
        {0x5C, 0x8F, 0xF9, 0x99, 0x0D, 0xA2},
        {0x75, 0xCC, 0xB5, 0x9C, 0x9B, 0xED},
        {0xD0, 0x1A, 0xFE, 0xEB, 0x89, 0x0A},
        {0x4B, 0x79, 0x1B, 0xEA, 0x7B, 0xCC},
        {0x26, 0x12, 0xC6, 0xDE, 0x84, 0xCA},
        {0x70, 0x7B, 0x11, 0xFC, 0x14, 0x81},
        {0x03, 0xF9, 0x06, 0x76, 0x46, 0xAE},
        {0x23, 0x52, 0xC5, 0xB5, 0x6D, 0x85},
        {0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5},
        {0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5},
        {0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5},
        {0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF},
        {0x4D, 0x3A, 0x99, 0xC3, 0x51, 0xDD},
        {0x1A, 0x98, 0x2C, 0x7E, 0x45, 0x9A},
        {0x5A, 0x1B, 0x85, 0xFC, 0xE2, 0x0A},
        {0x71, 0x4C, 0x5C, 0x88, 0x6E, 0x97},
        {0x58, 0x7E, 0xE5, 0xF9, 0x35, 0x0F},
        {0xA0, 0x47, 0x8C, 0xC3, 0x90, 0x91},
        {0x53, 0x3C, 0xB6, 0xC7, 0x23, 0xF6},
        {0x8F, 0xD0, 0xA4, 0xF2, 0x56, 0xE9},
        {0xE0, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0xE7, 0xD6, 0x06, 0x4C, 0x58, 0x60},
        {0xB2, 0x7C, 0xCA, 0xB3, 0x0D, 0xBD},
        {0x7C, 0x9F, 0xB8, 0x47, 0x42, 0x42},
        {0x56, 0x93, 0x69, 0xC5, 0xA0, 0xE5},
        {0x63, 0x21, 0x93, 0xBE, 0x1C, 0x3C},
        {0x64, 0x46, 0x72, 0xBD, 0x4A, 0xFE},
        {0x8F, 0xE6, 0x44, 0x03, 0x87, 0x90},
        {0x9D, 0xE8, 0x9E, 0x07, 0x02, 0x77},
        {0xB5, 0xFF, 0x67, 0xCB, 0xA9, 0x51},
        {0xEF, 0xF6, 0x03, 0xE1, 0xEF, 0xE9},
        {0xF1, 0x4E, 0xE7, 0xCA, 0xE8, 0x63},
        {0x9C, 0x28, 0xA6, 0x0F, 0x72, 0x49},
        {0xC9, 0x82, 0x6A, 0xF0, 0x27, 0x94},
        {0x60, 0x5F, 0x5E, 0x5D, 0x5C, 0x5B},
        {0x19, 0x94, 0x04, 0x28, 0x19, 0x70},
        {0x19, 0x94, 0x04, 0x28, 0x19, 0x98},
        {0x34, 0xD3, 0xC5, 0x68, 0xB3, 0x48},
        {0x91, 0xFF, 0x18, 0xE6, 0x38, 0x87},
        {0x4D, 0x8B, 0x8B, 0x95, 0xFD, 0xEE},
        {0x35, 0x4A, 0x78, 0x70, 0x87, 0xF1},
        {0x4A, 0x30, 0x6E, 0x62, 0xE9, 0xB6},
        {0xB9, 0xC8, 0x74, 0xAE, 0x63, 0xD0},
        {0x50, 0x52, 0x09, 0x01, 0x6A, 0x1F},
        {0xFF, 0xFF, 0xFF, 0x54, 0x58, 0x46}
    };

    Uid uid;
    PrintableUID printableUID;
    NdefMessage ndefMessage;
    String strAllPages = "";
    int totalPages = 0;
    int dataPages = 0;
    bool pageReadSuccess = false;
    int pageReadStatus = FAILURE;

    virtual ~RFIDInterface() {} // Virtual destructor

    /////////////////////////////////////////////////////////////////////////////////////
    // Life Cycle
    /////////////////////////////////////////////////////////////////////////////////////
    virtual bool begin() = 0;

    /////////////////////////////////////////////////////////////////////////////////////
    // Operations
    /////////////////////////////////////////////////////////////////////////////////////
    virtual int read(int cardBaudRate = 0) = 0; // cardBaudRate = 0 means MIFARE, 1 means FeliCa
    virtual int clone() = 0;
    virtual int erase() = 0;
    virtual int write(int cardBaudRate = 0) = 0;
    virtual int write_ndef() = 0;
    virtual int load() = 0;
    virtual int save(String filename) = 0;

    String statusMessage(int status) const {
        switch (status) {
            case SUCCESS: return String(F("Success"));
            case FAILURE: return String(F("Failed reading data blocks"));
            case TAG_NOT_PRESENT: return String(F("Failed reading. Tag not found"));
            case TAG_NOT_MATCH: return String(F("Error! Tags don't match"));
            case TAG_AUTH_ERROR: return String(F("Failed authenticating"));
            case NOT_IMPLEMENTED: return String(F("Not implemented"));
            default: return String();
        }
    }
};

#endif
